name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
    branches: 
      - master

env:
  # TODO: Change variable to your image's name.
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  REGISTRY: docker.pkg.github.com/${{ github.repository }}

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  build:
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: export registry as env var
        run: echo "::set-env name=REGISTRY::$(echo $REGISTRY | tr '[A-Z]' '[a-z]')"

      - name: Build package
        run: |
          docker-compose -f docker-compose.yml -f docker/overrides.yml pull -q || true
          docker-compose pull -q || true
 
          docker-compose config
          docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Run simple test
        run: |
          docker-compose run \
            --rm \
            -w /tmp \
            -v `pwd`/docker/vvvi-build-and-copy.cc:/tmp/vvvi-build-and-copy.cc \
            igprof \
            /bin/bash -c "g++ -o vvvi-build-and-copy vvvi-build-and-copy.cc -ldl -lpthread && \
               igprof -mp -z -o ig-vvvi-build-and-copy.gz ./vvvi-build-and-copy || true && \
               igprof-analyse -d -v -g -r MEM_TOTAL ig-vvvi-build-and-copy.gz"
          
  push:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: export registry as env var
        run: echo "::set-env name=REGISTRY::$(echo $REGISTRY | tr '[A-Z]' '[a-z]')"

      - name: Pull other images
        run: |
          # Pull other images to act as cache
          docker-compose -f docker-compose.yml -f docker/overrides.yml pull -q || true
          docker-compose pull -q || true
 
      - name: Build image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
         
          export VERSION=$VERSION
          
          docker-compose config
          docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1
          docker-compose push

      - name: Push other images
        if: "${{ endsWith(github.ref, 'master') }}"
        run: |
          export REGISTRY=$(echo $REGISTRY | tr '[A-Z]' '[a-z]')
 
          docker-compose -f docker-compose.yml -f docker/overrides.yml config
          docker-compose -f docker-compose.yml -f docker/overrides.yml build --build-arg BUILDKIT_INLINE_CACHE=1
          docker-compose -f docker-compose.yml -f docker/overrides.yml push
